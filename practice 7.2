import React from 'react';
import { createRoot } from 'react-dom/client';
import { Provider, useDispatch, useSelector } from 'react-redux';
import { configureStore, createSlice } from '@reduxjs/toolkit';

const cartSlice = createSlice({
  name: 'cart',
  initialState: { items: [], total: 0 },
  reducers: {
    addItem: (state, action) => {
      const existing = state.items.find(i => i.id === action.payload.id);
      if (existing) existing.quantity += 1;
      else state.items.push({ ...action.payload, quantity: 1 });
      state.total += action.payload.price;
    },
    removeItem: (state, action) => {
      const existing = state.items.find(i => i.id === action.payload);
      if (existing) {
        state.total -= existing.price;
        existing.quantity -= 1;
        if (existing.quantity === 0)
          state.items = state.items.filter(i => i.id !== action.payload);
      }
    },
    clearCart: (state) => {
      state.items = [];
      state.total = 0;
    }
  }
});

const { addItem, removeItem, clearCart } = cartSlice.actions;
const store = configureStore({ reducer: { cart: cartSlice.reducer } });

const products = [
  { id: 1, name: 'Laptop', price: 60000 },
  { id: 2, name: 'Headphones', price: 3000 },
  { id: 3, name: 'Smartphone', price: 25000 },
  { id: 4, name: 'Watch', price: 5000 }
];

function ProductList() {
  const dispatch = useDispatch();
  return (
    <div>
      <h2>Products</h2>
      {products.map(p => (
        <div key={p.id} style={{ margin: 10 }}>
          <span>{p.name} - ₹{p.price}</span>
          <button onClick={() => dispatch(addItem(p))}>Add</button>
        </div>
      ))}
    </div>
  );
}

function Cart() {
  const { items, total } = useSelector(s => s.cart);
  const dispatch = useDispatch();
  return (
    <div>
      <h2>Cart</h2>
      {items.length === 0 ? <p>Cart is empty</p> : items.map(i => (
        <div key={i.id} style={{ margin: 10 }}>
          <span>{i.name} x {i.quantity} - ₹{i.price * i.quantity}</span>
          <button onClick={() => dispatch(removeItem(i.id))}>-</button>
        </div>
      ))}
      <h3>Total: ₹{total}</h3>
      <button onClick={() => dispatch(clearCart())}>Clear Cart</button>
    </div>
  );
}

function App() {
  return (
    <Provider store={store}>
      <div style={{ padding: 20 }}>
        <h1>Shopping Cart</h1>
        <div style={{ display: 'flex', gap: 50 }}>
          <ProductList />
          <Cart />
        </div>
      </div>
    </Provider>
  );
}

const root = createRoot(document.getElementById('root'));
root.render(<App />);
